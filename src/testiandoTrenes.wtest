import trenes.*
import vagones.*
import locomotoras.*



describe "Formaciones"{
	const alfa1 = new Locomotora(
		peso = 2,
		//pesoArrastre = 100000,
		pesoArrastre = 1000,
		velocidadMaxima = 80
	)
	
	const alfa2 = new Locomotora(
		peso = 1,
		//pesoArrastre = 300000,
		pesoArrastre = 3000,
		velocidadMaxima = 60
	)
	
	const vagonP1 = new VagonPasajeros(
		largo = 50,
		anchoUtil = 20		
	)
	
	const vagonP2 = new VagonPasajeros(
		largo = 5,
		anchoUtil = 2
	)
	
	const vagonP3 = new VagonPasajeros (
		largo = 10,
		anchoUtil = 4,
		banios = 2
	)
	
	const vagonP4 = new VagonPasajeros(
		largo = 1,
		anchoUtil = 1,
		banios = 0
	)
	
	const vagonC1 = new VagonCarga(
		cargaMaxima = 20000
	)

	const vagonC2 = new VagonCarga(
		cargaMaxima = 100
	)
	
	const rocaFC = new Formacion(
		vagones = [vagonP1,vagonP2,vagonC1,vagonC2],
		locomotoras = [alfa1,alfa2]		
	)
	
	const alfa3 = new Locomotora(
		peso = 80,
		pesoArrastre = 100000,
		velocidadMaxima = 100
	)
	
	const depositoChacabuco = new Deposito(
		formacionesDepositadas = [new Formacion (locomotoras= [alfa3], 
			vagones = [vagonC1,vagonC2,vagonP1] ) ]
			
	)
	
	const deposito2 = new Deposito(
		formacionesDepositadas = [new Formacion (locomotoras= [alfa1], 
			vagones = [vagonC1,vagonC2,vagonP3] ),
								 new Formacion(locomotoras = [alfa2], vagones = [vagonC1,vagonP1]) ]
			
	)
	
	const form1 = new FormacionDeCortaDistancia(
		vagones = [vagonC2,vagonP1],
		locomotoras = [alfa3]
	)
	
	const form2 = new FormacionDeLargaDistancia(
		vagones = [vagonC2,vagonP3],
		locomotoras = [alfa3],
		cubreGrandesCiudades = true
	)
	
	const elPiola = new FormacionDeAltaVelocidad(
		vagones = [vagonP4],
		locomotoras = [alfa1],
		cubreGrandesCiudades = true
		
	)
	
	const form3 = new FormacionDeLargaDistancia(
		vagones =[vagonP1],
		locomotoras = [alfa1],
		cubreGrandesCiudades = false
	)
	
	//---------------------------------------------------------------- Inicializacion Objetos---------------------------------
	
	test "Modelado de  RocaFC"{
		assert.equals(4, rocaFC.vagones().size())
		assert.equals(2,rocaFC.locomotoras().size())
	}
	
	test "Vagones y su pesoMaximo"{
		assert.equals(40000,vagonP1.pesoMaximo())
		assert.equals(3200,vagonP2.pesoMaximo())
		assert.equals(20160,vagonC1.pesoMaximo())
		assert.equals(260,vagonC2.pesoMaximo())
		
	}

	test "Locomotoras arrastre util"{
		assert.equals(998,alfa1.arrastreUtil())
		assert.equals(2999,alfa2.arrastreUtil())
	}
	
	// Test Punto 1
	test "Vagones livianos "{
		assert.equals(1,rocaFC.cantidadVagonesLivianos())
	}
	// Test Punto 2
	test "Velocidad Maxima RocaFC"{
		assert.equals(60,rocaFC.velocidadMaxima())
	}
	//Test Punto 3
	test "RocaFC es eficiente"{
		assert.that(rocaFC.esEficiente())
	}
	// Test Punto 4
	test "RocaFC puede moverse"{
		assert.that(not rocaFC.puedeMoverse()) // arrastre util de locomotoras = 3997
		// pesoMaximo total  = 63620
	}
	// Test Punto 5
	test "Cuantos kilos le falta para moverse"{
		//assert.equals(0,rocaFC.cuantosParaMoverse())
		assert.equals(59623,rocaFC.cuantosParaMoverse())
	}
	
	// Test Punto 6
	test "Los vagones mas Pesados de las formaciones"{
		assert.equals([vagonP1],depositoChacabuco.losVagonesMasPesados())
	}
	
	// Test Punto 7 
	test "Deposito Chacabuco  necesita un conductor experto"{
		assert.that(depositoChacabuco.necesitaUnConductorExp())
	}
	
	// Test Punto 8
	test"Agregar Locomotoras"{
		assert.that (  not form3.puedeMoverse())
		deposito2.agregarLocomotoraA(form3)
		
		assert.equals([alfa1],form3.locomotoras())
	}
	
	//Test Punto 9
	test "Esta Bien Armada Corta Distancia"{
		assert.that(form1.esCompleja())
		assert.that (form1.puedeMoverse())
		assert.that(form1.estaBienArmada())
	} 
	
	test "Esta Bien Armada De Larga Distancia"{
		assert.that( form2.puedeMoverse())
		assert.equals(100,vagonP3.cantidadPasajeros())
		assert.equals(0,vagonC1.cantidadPasajeros())
		assert.that(form2.tieneMuchosBanios())
		assert.that(form2.estaBienArmada())
		
	}
	
	// Test Punto 10 
	test "Velocidad Maxima de las formaciones de corta distancia"{
		assert.equals(60,form1.velocidadMaxima())
	}
	test "Velocidad Maxima de las formaciones de larga distancia"{
		assert.equals(100,form2.velocidadMaxima())
	}
	test "Velocidad  Maxima de las formaciones de LargaDistancia Grandes Ciudades"{
		assert.equals(80,form3.velocidadMaxima())
	}
	
	// Test Punto 11
	test "Trenes de Alta Velocidad"{
		assert.equals(640,vagonP4.pesoMaximo())
		assert.that(elPiola.todosVagonesLivianos())
		assert.that(not elPiola.estaBienArmada())
	}
}